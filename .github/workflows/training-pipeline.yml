name: Training Pipeline

on:
  workflow_run:
    workflows: [ "Data Pipeline" ]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: write

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Prerequisites
        run: |
          python -m pip install --upgrade pip
          pip install  poetry 
          pip install dvc[s3]

      - name: DVC setup
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
          dvc pull -r origin

      - name: Pull data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull

      - name: Install dependencies
        run: |
          poetry install --with dev --without win-dev

      - name: Train
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          poetry run poe train_validation

      - name: Predict
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          poetry run poe predict_validation

      - name: Commit and push data
        run: |
          dvc add data
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git pull
          git diff-index --quiet HEAD || (git commit -a -m "action: fetch latest data" --allow-empty)
          git push
          dvc push -r origin